<?php

/**
 * gad-7 report-as-pdf.php
 * generate a pdf of the form
 *
 * @package   OpenEMR
 * @link      http://www.open-emr.org
 * @author    Ruth Moulton <moulton ruth@muswell.me.uk>
 * @copyright Copyright (c) 2021 ruth moulton <ruth@muswell.me.uk>
 *
 * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
 */

/* these are included in gad7.inc.php
require_once(dirname(__FILE__) . '/../../globals.php');
require_once($GLOBALS["srcdir"] . "/api.inc"
*/
require_once("gad7.inc.php");
use Mpdf\Mpdf;  /* used to generate a pdf of the form */

function GeneratePDF($pid, $id)
{
    global $str_nervous, $str_control_worry, $str_worry, $str_relax, $str_restless, $str_annoyed, $str_afraid, $str_total,    $str_q8_2 , $str_q8;

    global $str_values;

    $pdf_ret = true;
    $value = 0;
    $gad7_total = 0; /* initialise back to zero */

    $str_difficulty_values = [0 => xl('Not at all') . ' (0)',1 => xl('Somewhat difficult') . ' (1)', 2 => xl('Very difficult') . ' (2)', 3 => xl('Extremely difficult') . ' (3)', 'undef' => xl('not answered')];
    $str_issues = ["nervous_score" => xl('Feeling nervous'),"control_worry_score" => xl('Not controlling worry'),"worry_score" => xl('Worrying'),"relax_score" => xl('Trouble relaxing'),"restless_score" => xl('Being restless'),"irritable_score" => xl('Being irritable'),"fear_score" => xl('Feeling afraid'), "difficulty" => xl('Difficulty working etc.'),"total" => xl('Total GAD-7 score')];
    $str_score_analysis = [0 => xl('No anxiety disorder'), 5 => xl('Mild anxiety disorder'), 15 => xl('Severe anxiety disorder')];

    $data = formFetch("form_gad7", $id);
    if ($data) {
        foreach ($data as $key => $value) {
// include scores_array and total for backward compatibility
            if ($key == "id" || $key == "pid" || $key == "user" || $key == "groupname" || $key == "authorized" || $key ==  "activity" || $key == "date" || $value == "" || $key == "scores_array" || $key == "total" || $value == "0000-00-00 00:00:00") {
                continue;
            }
            if ($key !== "difficulty") {
               if (is_numeric($value)) {
                    $gad7_total += $value;
               }
            }
        // find score description from the total
            switch (intdiv($gad7_total, 5)) {
            case 0:
                $exp = $str_score_analysis[0];
                break;
            case 1:
            case 2:
                $exp = $str_score_analysis[5];
                break;
            default:
                $exp = $str_score_analysis[15];
            }
      }
    } else {
        echo "<br>No form data</br>";
    }
 /* generate a pdf version of the form,   int pid - patient id , int id - gad7 form number
 */
 $config_mpdf = array(
        'tempDir' => $GLOBALS['MPDF_WRITE_DIR'],
        'mode' => $GLOBALS['pdf_language'],
        'format' => $GLOBALS['pdf_size'],
        'default_font_size' => '9',
        'default_font' => 'dejavusans',
        'margin_left' => $GLOBALS['pdf_left_margin'],
        'margin_right' => $GLOBALS['pdf_right_margin'],
        'margin_top' => $GLOBALS['pdf_top_margin'],
        'margin_bottom' => $GLOBALS['pdf_bottom_margin'],
        'margin_header' => '',
        'margin_footer' => '',
        'orientation' => $GLOBALS['pdf_layout'],
        'shrink_tables_to_fit' => 1,
        'use_kwt' => true,
        'autoScriptToLang' => true,
        'keep_table_proportions' => true,
        'debug' => true,
        'allow_output_buffering' => false
        );
    $mpdf = new mPDF($config_mpdf);

    /* reformat the date from the NOW() format generated by formSubmit, which is Ymd, into configured format plus time */
    $date_time = explode(" ", $data['date'], 2); /* split into date and time */
    $date_elements = explode('-', $date_time[0], 3); /*split date into y, m, d */
    switch ($GLOBALS['date_display_format']) {
       case 1: /*mm-dd-yyy*/
            $formated_date = $date_elements[1] . '-'. $date_elements[2] . '-' . $date_elements[0];
            break;
       case 2:  /*dd-mm-yyy */
            $formated_date = $date_elements[2] . '-' . $date_elements[1] . '-' . $date_elements[0];
            break;
     /* if 0 - YYYYMMDD nothing to do */
      default:
        $formated_date = $date_time[0];
     }
    $client_name = getPatientNameFirstLast($pid);
  /* strip out white space - replace with underscore  - for use in file name*/
    $client_name_fn = str_replace(" ", "_", $client_name);
    $client_file_name = $client_name_fn . '_gad7_' . $id. '.pdf' ; /* downloaded file name */

    if ($_SESSION['language_direction']== 'rtl'){
        $mpdf->SetDirectionality('rtl');
    }
    $mpdf->WriteHTML('<p><h2>Generalised Anxiety Disorder 7 (GAD-7) </h2></p>');
    $mpdf->WriteHTML('<p>Client: ' . $client_name . '</p>');
    $mpdf->WriteHTML('<p>Form completed on: ' . text($formated_date) . '</p>');
    $mpdf->WriteHTML('<p><h3>The number of times client has been bothered by the following issues</h3></p>');
    $mpdf->WriteHTML('<p>' . text($str_nervous) . ": " . text($str_values [$data['nervous_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_control_worry) . ": " . text($str_values [$data['control_worry_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_worry) . ": " . text($str_values [$data['worry_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_relax) . ": " . text($str_values [$data['relax_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_restless) . ": " . text($str_values [$data['restless_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_annoyed) . ": " . text($str_values [$data['irritable_score']]) . '</p>');
    $mpdf->WriteHTML('<p>' . text($str_afraid) . ": " . text($str_values [$data['fear_score']]) . '</p>');
    $mpdf->WriteHTML('<hr><b>   ' . text($str_total) . ": " . text($gad7_total) . "   " . text($exp) . '</b><hr>');
    $mpdf->WriteHTML('<p><br>' . text($str_q8) . ": " . text($str_difficulty_values [$data['difficulty']]));
    $mpdf->WriteHTML(text($str_q8_2) .  '</p>');

  /* D or I set in administration:global settings:PDF:output type */
    try {
       $mpdf->Output($client_file_name, $GLOBALS['pdf_output']);
     } catch (\MpdfException $exception) {
       echo "Mpdf exception: " . text($exception);
        $pdf_ret = false;
     }
 return $pdf_ret;
}

/* start executing here when called from client */
$form_id = $_GET['form_id'];

/* the next line seems to prevent this code from crashing ??? */
/*  $foo = $client_name_fn.'_gad7_'.$id.'.pdf' ; /* downloaded file name */
/* the following line makes no difference to the crash */
$foo = 'some string or another';

if (!GeneratePDF($pid, $form_id)){
    echo "error generating pdf file";
}
