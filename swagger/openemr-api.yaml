openapi: 3.0.0
info:
  title: 'OpenEMR API'
  version: 6.1.0
servers:
  -
    url: /apis/default/
paths:
  /api/facility:
    get:
      tags:
        - standard
      description: 'Returns a single facility.'
      parameters:
        -
          name: name
          in: query
          description: 'The name for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_npi
          in: query
          description: 'The facility_npi for the facility.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone for the facility.'
          required: false
          schema:
            type: string
        -
          name: fax
          in: query
          description: 'The fax for the facility.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the facility.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the facility.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the facility.'
          required: false
          schema:
            type: string
        -
          name: postal_code
          in: query
          description: 'The postal_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: country_code
          in: query
          description: 'The country_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: federal_ein
          in: query
          description: 'The federal_ein for the facility.'
          required: false
          schema:
            type: string
        -
          name: website
          in: query
          description: 'The website for the facility.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the facility.'
          required: false
          schema:
            type: string
        -
          name: domain_identifier
          in: query
          description: 'The domain_identifier for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_taxonomy
          in: query
          description: 'The facility_taxonomy for the facility.'
          required: false
          schema:
            type: string
        -
          name: facility_code
          in: query
          description: 'The facility_code for the facility.'
          required: false
          schema:
            type: string
        -
          name: billing_location
          in: query
          description: 'The billing_location setting for the facility.'
          required: false
          schema:
            type: string
        -
          name: accepts_assignment
          in: query
          description: 'The accepts_assignment setting for the facility.'
          required: false
          schema:
            type: string
        -
          name: oid
          in: query
          description: 'The oid for the facility.'
          required: false
          schema:
            type: string
        -
          name: service_location
          in: query
          description: 'The service_location setting for the facility.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Creates a facility in the system'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - facility_npi
              properties:
                name:
                  description: 'The name for the facility.'
                  type: string
                facility_npi:
                  description: 'The facility_npi for the facility.'
                  type: string
                phone:
                  description: 'The phone for the facility.'
                  type: string
                fax:
                  description: 'The fax for the facility.'
                  type: string
                street:
                  description: 'The street for the facility.'
                  type: string
                city:
                  description: 'The city for the facility.'
                  type: string
                state:
                  description: 'The state for the facility.'
                  type: string
                postal_code:
                  description: 'The postal_code for the facility.'
                  type: string
                country_code:
                  description: 'The country_code for the facility.'
                  type: string
                federal_ein:
                  description: 'The federal_ein for the facility.'
                  type: string
                website:
                  description: 'The website for the facility.'
                  type: string
                email:
                  description: 'The email for the facility.'
                  type: string
                domain_identifier:
                  description: 'The domain_identifier for the facility.'
                  type: string
                facility_taxonomy:
                  description: 'The facility_taxonomy for the facility.'
                  type: string
                facility_code:
                  description: 'The facility_code for the facility.'
                  type: string
                billing_location:
                  description: 'The billing_location setting for the facility.'
                  type: string
                accepts_assignment:
                  description: 'The accepts_assignment setting for the facility.'
                  type: string
                oid:
                  description: 'The oid for the facility.'
                  type: string
                service_location:
                  description: 'The service_location setting for the facility.'
                  type: string
              type: object
              example:
                name: Aquaria
                facility_npi: '123456789123'
                phone: 808-606-3030
                fax: 808-606-3031
                street: '1337 Bit Shifter Ln'
                city: 'San Lorenzo'
                state: ZZ
                postal_code: '54321'
                country_code: US
                federal_ein: '4343434'
                website: 'https://example.com'
                email: foo@bar.com
                domain_identifier: ''
                facility_taxonomy: ''
                facility_code: ''
                billing_location: '1'
                accepts_assignment: '1'
                oid: ''
                service_location: '1'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/facility/{fuuid}':
    get:
      tags:
        - standard
      description: 'Returns a single facility.'
      parameters:
        -
          name: fuuid
          in: path
          description: 'The uuid for the facility.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Updates a facility in the system'
      parameters:
        -
          name: fuuid
          in: path
          description: 'The uuid for the facility.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: 'The name for the facility.'
                  type: string
                facility_npi:
                  description: 'The facility_npi for the facility.'
                  type: string
                phone:
                  description: 'The phone for the facility.'
                  type: string
                fax:
                  description: 'The fax for the facility.'
                  type: string
                street:
                  description: 'The street for the facility.'
                  type: string
                city:
                  description: 'The city for the facility.'
                  type: string
                state:
                  description: 'The state for the facility.'
                  type: string
                postal_code:
                  description: 'The postal_code for the facility.'
                  type: string
                country_code:
                  description: 'The country_code for the facility.'
                  type: string
                federal_ein:
                  description: 'The federal_ein for the facility.'
                  type: string
                website:
                  description: 'The website for the facility.'
                  type: string
                email:
                  description: 'The email for the facility.'
                  type: string
                domain_identifier:
                  description: 'The domain_identifier for the facility.'
                  type: string
                facility_taxonomy:
                  description: 'The facility_taxonomy for the facility.'
                  type: string
                facility_code:
                  description: 'The facility_code for the facility.'
                  type: string
                billing_location:
                  description: 'The billing_location setting for the facility.'
                  type: string
                accepts_assignment:
                  description: 'The accepts_assignment setting for the facility.'
                  type: string
                oid:
                  description: 'The oid for the facility.'
                  type: string
                service_location:
                  description: 'The service_location setting for the facility.'
                  type: string
              type: object
              example:
                name: Aquaria
                facility_npi: '123456789123'
                phone: 808-606-3030
                fax: 808-606-3031
                street: '1337 Bit Shifter Ln'
                city: 'San Lorenzo'
                state: ZZ
                postal_code: '54321'
                country_code: US
                federal_ein: '4343434'
                website: 'https://example.com'
                email: foo@bar.com
                domain_identifier: ''
                facility_taxonomy: ''
                facility_code: ''
                billing_location: '1'
                accepts_assignment: '1'
                oid: ''
                service_location: '1'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/patient:
    get:
      tags:
        - standard
      description: 'Retrieves a list of patients'
      parameters:
        -
          name: fname
          in: query
          description: 'The first name for the patient.'
          required: false
          schema:
            type: string
        -
          name: lname
          in: query
          description: 'The last name for the patient.'
          required: false
          schema:
            type: string
        -
          name: ss
          in: query
          description: 'The social security number for the patient.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the patient.'
          required: false
          schema:
            type: string
        -
          name: postal_code
          in: query
          description: 'The postal code for the patient.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the patient.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_home
          in: query
          description: 'The home phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_biz
          in: query
          description: 'The business phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: phone_cell
          in: query
          description: 'The cell phone for the patient.'
          required: false
          schema:
            type: string
        -
          name: postal_contact
          in: query
          description: 'The postal_contact for the patient.'
          required: false
          schema:
            type: string
        -
          name: sex
          in: query
          description: 'The gender for the patient.'
          required: false
          schema:
            type: string
        -
          name: country_code
          in: query
          description: 'The country code for the patient.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the patient.'
          required: false
          schema:
            type: string
        -
          name: DOB
          in: query
          description: 'The DOB for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Creates a new patient'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single patient by their uuid'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Updates a patient'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/encounter':
    get:
      tags:
        - standard
      description: 'Retrieves a list of encounters for a single patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Creates a new encounter'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/encounter/{euuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single encounter for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: euuid
          in: path
          description: 'The uuid for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Modify a encounter'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/soap_note':
    get:
      tags:
        - standard
      description: 'Retrieves soap notes from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new soap note'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/vital':
    get:
      tags:
        - standard
      description: 'Retrieves all vitals from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new vitals form'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/vital/:vid':
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a vitals form'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/vital/{vid}':
    get:
      tags:
        - standard
      description: 'Retrieves a vitals form from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: vid
          in: path
          description: 'The id for the vitals form.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/encounter/{eid}/soap_note/{sid}':
    get:
      tags:
        - standard
      description: 'Retrieves a soap note from an encounter for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the encounter.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the soap note.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a soap note'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/practitioner:
    get:
      tags:
        - standard
      description: 'Retrieves a list of practitioners'
      parameters:
        -
          name: title
          in: query
          description: 'The title for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: fname
          in: query
          description: 'The first name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: lname
          in: query
          description: 'The last name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: mname
          in: query
          description: 'The middle name for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: federaltaxid
          in: query
          description: 'The federal tax id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: federaldrugid
          in: query
          description: 'The federal drug id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: upin
          in: query
          description: 'The upin for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: facility_id
          in: query
          description: 'The facility id for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: facility
          in: query
          description: 'The facility for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: npi
          in: query
          description: 'The npi for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: specialty
          in: query
          description: 'The specialty for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: billname
          in: query
          description: 'The billname for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: url
          in: query
          description: 'The url for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: assistant
          in: query
          description: 'The assistant for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          description: 'The organization for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: valedictory
          in: query
          description: 'The valedictory for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: street
          in: query
          description: 'The street for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: streetb
          in: query
          description: 'The street (line 2) for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: city
          in: query
          description: 'The city for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: state
          in: query
          description: 'The state for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: zip
          in: query
          description: 'The zip for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: fax
          in: query
          description: 'The fax for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phonew1
          in: query
          description: 'The phonew1 for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: phonecell
          in: query
          description: 'The phonecell for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: notes
          in: query
          description: 'The notes for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: state_license_number2
          in: query
          description: 'The state license number for the practitioner.'
          required: false
          schema:
            type: string
        -
          name: username
          in: query
          description: 'The username for the practitioner.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'Submits a new practitioner'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - fname
                - lname
                - npi
              properties:
                title:
                  description: 'The title for the practitioner.'
                  type: string
                fname:
                  description: 'The first name for the practitioner.'
                  type: string
                mname:
                  description: 'The middle name for the practitioner.'
                  type: string
                lname:
                  description: 'The last name for the practitioner.'
                  type: string
                federaltaxid:
                  description: 'The federal tax id for the practitioner.'
                  type: string
                federaldrugid:
                  description: 'The federal drug id for the practitioner.'
                  type: string
                upin:
                  description: 'The upin for the practitioner.'
                  type: string
                facility_id:
                  description: 'The facility_id for the practitioner.'
                  type: string
                facility:
                  description: 'The facility name for the practitioner.'
                  type: string
                npi:
                  description: 'The npi for the practitioner.'
                  type: string
                email:
                  description: 'The email for the practitioner.'
                  type: string
                specialty:
                  description: 'The specialty for the practitioner.'
                  type: string
                billname:
                  description: 'The billname for the practitioner.'
                  type: string
                url:
                  description: 'The url for the practitioner.'
                  type: string
                assistant:
                  description: 'The assistant for the practitioner.'
                  type: string
                valedictory:
                  description: 'The valedictory for the practitioner.'
                  type: string
                street:
                  description: 'The street address for the practitioner.'
                  type: string
                streetb:
                  description: 'The streetb address for the practitioner.'
                  type: string
                city:
                  description: 'The city for the practitioner.'
                  type: string
                state:
                  description: 'The state for the practitioner.'
                  type: string
                zip:
                  description: 'The zip for the practitioner.'
                  type: string
                phone:
                  description: 'The phone for the practitioner.'
                  type: string
                fax:
                  description: 'The fax for the practitioner.'
                  type: string
                phonew1:
                  description: 'The phonew1 for the practitioner.'
                  type: string
                phonecell:
                  description: 'The phonecell for the practitioner.'
                  type: string
                notes:
                  description: 'The notes for the practitioner.'
                  type: string
                state_license_number:
                  description: 'The state license number for the practitioner.'
                  type: string
                username:
                  description: 'The username for the practitioner.'
                  type: string
              type: object
              example:
                title: Mrs.
                fname: Eduardo
                mname: Kathy
                lname: Perez
                federaltaxid: ''
                federaldrugid: ''
                upin: ''
                facility_id: '3'
                facility: 'Your Clinic Name Here'
                npi: '12345678901'
                email: info@pennfirm.com
                specialty: ''
                billname: null
                url: null
                assistant: null
                organization: null
                valedictory: null
                street: '789 Third Avenue'
                streetb: '123 Cannaut Street'
                city: 'San Diego'
                state: CA
                zip: '90210'
                phone: '(619) 555-9827'
                fax: null
                phonew1: '(619) 555-7822'
                phonecell: '(619) 555-7821'
                notes: null
                state_license_number: '123456'
                username: eduardoperez
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/practitioner/{pruuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single practitioner by their uuid'
      parameters:
        -
          name: pruuid
          in: path
          description: 'The uuid for the practitioner.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'Edit a practitioner'
      parameters:
        -
          name: pruuid
          in: path
          description: 'The uuid for the practitioner.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                title:
                  description: 'The title for the practitioner.'
                  type: string
                fname:
                  description: 'The first name for the practitioner.'
                  type: string
                mname:
                  description: 'The middle name for the practitioner.'
                  type: string
                lname:
                  description: 'The last name for the practitioner.'
                  type: string
                federaltaxid:
                  description: 'The federal tax id for the practitioner.'
                  type: string
                federaldrugid:
                  description: 'The federal drug id for the practitioner.'
                  type: string
                upin:
                  description: 'The upin for the practitioner.'
                  type: string
                facility_id:
                  description: 'The facility_id for the practitioner.'
                  type: string
                facility:
                  description: 'The facility name for the practitioner.'
                  type: string
                npi:
                  description: 'The npi for the practitioner.'
                  type: string
                email:
                  description: 'The email for the practitioner.'
                  type: string
                specialty:
                  description: 'The specialty for the practitioner.'
                  type: string
                billname:
                  description: 'The billname for the practitioner.'
                  type: string
                url:
                  description: 'The url for the practitioner.'
                  type: string
                assistant:
                  description: 'The assistant for the practitioner.'
                  type: string
                valedictory:
                  description: 'The valedictory for the practitioner.'
                  type: string
                street:
                  description: 'The street address for the practitioner.'
                  type: string
                streetb:
                  description: 'The streetb address for the practitioner.'
                  type: string
                city:
                  description: 'The city for the practitioner.'
                  type: string
                state:
                  description: 'The state for the practitioner.'
                  type: string
                zip:
                  description: 'The zip for the practitioner.'
                  type: string
                phone:
                  description: 'The phone for the practitioner.'
                  type: string
                fax:
                  description: 'The fax for the practitioner.'
                  type: string
                phonew1:
                  description: 'The phonew1 for the practitioner.'
                  type: string
                phonecell:
                  description: 'The phonecell for the practitioner.'
                  type: string
                notes:
                  description: 'The notes for the practitioner.'
                  type: string
                state_license_number:
                  description: 'The state license number for the practitioner.'
                  type: string
                username:
                  description: 'The username for the practitioner.'
                  type: string
              type: object
              example:
                title: Mr
                fname: Baz
                mname: ''
                lname: Bop
                street: '456 Tree Lane'
                zip: '08642'
                city: FooTown
                state: FL
                phone: 123-456-7890
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/medical_problem:
    get:
      tags:
        - standard
      description: 'Retrieves a list of medical problems'
      parameters:
        -
          name: puuid
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: condition_uuid
          in: query
          description: 'The uuid for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: title
          in: query
          description: 'The title for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: begdate
          in: query
          description: 'The start date for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: enddate
          in: query
          description: 'The end date for the medical problem.'
          required: false
          schema:
            type: string
        -
          name: diagnosis
          in: query
          description: 'The diagnosis for the medical problem.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/medical_problem/{muuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single medical problem by their uuid'
      parameters:
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/medical_problem':
    get:
      tags:
        - standard
      description: 'Retrieves all medical problems for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new medical problem'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/medical_problem/{muuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a medical problem for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a medical problem'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: muuid
          in: path
          description: 'The uuid for the medical problem.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/allergy:
    get:
      tags:
        - standard
      description: 'Retrieves a list of allergies'
      parameters:
        -
          name: lists.pid
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: lists.id
          in: query
          description: 'The uuid for the allergy.'
          required: false
          schema:
            type: string
        -
          name: title
          in: query
          description: 'The title for the allergy.'
          required: false
          schema:
            type: string
        -
          name: begdate
          in: query
          description: 'The start date for the allergy.'
          required: false
          schema:
            type: string
        -
          name: enddate
          in: query
          description: 'The end date for the allergy.'
          required: false
          schema:
            type: string
        -
          name: diagnosis
          in: query
          description: 'The diagnosis for the allergy.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/allergy/{auuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a single allergy by their uuid'
      parameters:
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/allergy':
    get:
      tags:
        - standard
      description: 'Retrieves all allergies for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new allergy'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{puuid}/allergy/{auuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a allergy for a patient'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a allergy'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medical problem'
      parameters:
        -
          name: puuid
          in: path
          description: 'The uuid for the patient.'
          required: true
          schema:
            type: string
        -
          name: auuid
          in: path
          description: 'The uuid for the allergy.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/medication':
    get:
      tags:
        - standard
      description: 'Retrieves all medications for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new medication'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/medication/{mid}':
    get:
      tags:
        - standard
      description: 'Retrieves a medication for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the medication.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a medication'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a medication'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: mid
          in: path
          description: 'The id for the medication.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/surgery':
    get:
      tags:
        - standard
      description: 'Retrieves all surgeries for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new surgery'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/surgery/{sid}':
    get:
      tags:
        - standard
      description: 'Retrieves a surgery for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the surgery.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a surgery'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a surgery'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: sid
          in: path
          description: 'The id for the surgery.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/dental_issue':
    get:
      tags:
        - standard
      description: 'Retrieves all dental issues for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new dental issue'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/dental_issue/{did}':
    get:
      tags:
        - standard
      description: 'Retrieves a dental issue for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the dental issue.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a dental issue'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a dental issue'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the dental issue.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/appointment':
    get:
      tags:
        - standard
      description: 'Retrieves all appointments for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new appointment'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/appointment:
    get:
      tags:
        - standard
      description: 'Retrieves all appointments'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/appointment/{eid}':
    get:
      tags:
        - standard
      description: 'Retrieves an appointment'
      parameters:
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/appointment/{eid}':
    get:
      tags:
        - standard
      description: 'Retrieves a appointment for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a appointment'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The eid for the appointment.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/list/{list_name}':
    get:
      tags:
        - standard
      description: 'Retrieves a list'
      parameters:
        -
          name: list_name
          in: path
          description: 'The list_id of the list.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/version:
    get:
      tags:
        - standard
      description: 'Retrieves the OpenEMR version information'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/product:
    get:
      tags:
        - standard
      description: 'Retrieves the OpenEMR product registration information'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/insurance_company:
    get:
      tags:
        - standard
      description: 'Retrieves all insurance companies'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new insurance company'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/insurance_company/{iid}':
    get:
      tags:
        - standard
      description: 'Retrieves insurance company'
      parameters:
        -
          name: iid
          in: path
          description: 'The id of the insurance company.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a insurance company'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/insurance_type:
    get:
      tags:
        - standard
      description: 'Retrieves all insurance types'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/document':
    get:
      tags:
        - standard
      description: 'Retrieves all file information of documents from a category for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: path
          in: query
          description: 'The category of the documents.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new patient document'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/document/{did}':
    get:
      tags:
        - standard
      description: 'Retrieves a document for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: did
          in: path
          description: 'The id for the patient document.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/insurance':
    get:
      tags:
        - standard
      description: 'Retrieves all insurances for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/insurance/{type}':
    get:
      tags:
        - standard
      description: 'Retrieves a insurance (by type) for a patient'
      parameters:
        -
          name: pid
          in: path
          description: 'The pid for the patient.'
          required: true
          schema:
            type: string
        -
          name: type
          in: path
          description: 'The insurance type for the patient.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a patient insurance (by type)'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a new patient insurance (with type)'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/message':
    post:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Submits a pnote message'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/patient/{pid}/message/{mid}':
    put:
      tags:
        - standard
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION. Edit a pnote message'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - standard
      description: 'Delete a pnote message'
      parameters:
        -
          name: pid
          in: path
          description: 'The id for the patient.'
          required: true
          schema:
            type: string
        -
          name: eid
          in: path
          description: 'The id for the pnote message.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/immunization:
    get:
      tags:
        - standard
      description: 'Retrieves a list of immunizations'
      parameters:
        -
          name: patient_id
          in: query
          description: 'The pid for the patient.'
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          description: 'The id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: uuid
          in: query
          description: 'The uuid for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_date
          in: query
          description: 'The administered date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: immunization_id
          in: query
          description: 'The immunization list_id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: cvx_code
          in: query
          description: 'The cvx code for the immunization.'
          required: false
          schema:
            type: string
        -
          name: manufacturer
          in: query
          description: 'The manufacturer for the immunization.'
          required: false
          schema:
            type: string
        -
          name: lot_number
          in: query
          description: 'The lot number for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_by_id
          in: query
          description: 'The administered by id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administered_by
          in: query
          description: 'The administered by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: education_date
          in: query
          description: 'The education date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: vis_date
          in: query
          description: 'The vis date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: note
          in: query
          description: 'The note for the immunization.'
          required: false
          schema:
            type: string
        -
          name: create_date
          in: query
          description: 'The create date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: update_date
          in: query
          description: 'The update date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: created_by
          in: query
          description: 'The created_by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: updated_by
          in: query
          description: 'The updated_by for the immunization.'
          required: false
          schema:
            type: string
        -
          name: amount_administered
          in: query
          description: 'The amount administered for the immunization.'
          required: false
          schema:
            type: string
        -
          name: amount_administered_unit
          in: query
          description: 'The amount administered unit for the immunization.'
          required: false
          schema:
            type: string
        -
          name: expiration_date
          in: query
          description: 'The expiration date for the immunization.'
          required: false
          schema:
            type: string
        -
          name: route
          in: query
          description: 'The route for the immunization.'
          required: false
          schema:
            type: string
        -
          name: administration_site
          in: query
          description: 'The administration site for the immunization.'
          required: false
          schema:
            type: string
        -
          name: added_erroneously
          in: query
          description: 'The added_erroneously for the immunization.'
          required: false
          schema:
            type: string
        -
          name: external_id
          in: query
          description: 'The external_id for the immunization.'
          required: false
          schema:
            type: string
        -
          name: completion_status
          in: query
          description: 'The completion status for the immunization.'
          required: false
          schema:
            type: string
        -
          name: information_source
          in: query
          description: 'The information source for the immunization.'
          required: false
          schema:
            type: string
        -
          name: refusal_reason
          in: query
          description: 'The refusal reason for the immunization.'
          required: false
          schema:
            type: string
        -
          name: ordering_provider
          in: query
          description: 'The ordering provider for the immunization.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/immunization/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a immunization'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the immunization.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/procedure:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all procedures'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/procedure/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a procedure'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the procedure.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/drug:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all drugs'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/drug/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a drug'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the drug.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /api/prescription:
    get:
      tags:
        - standard
      description: 'Retrieves a list of all prescriptions'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/api/prescription/{uuid}':
    get:
      tags:
        - standard
      description: 'Retrieves a prescription'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the prescription.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/AllergyIntolerance:
    get:
      tags:
        - fhir
      description: 'Returns a list of AllergyIntolerance resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the AllergyIntolerance resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/AllergyIntolerance/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single AllergyIntolerance resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the AllergyIntolerance resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/CarePlan:
    get:
      tags:
        - fhir
      description: 'Returns a list of CarePlan resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the CarePlan resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the CarePlan resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/CarePlan/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single CarePlan resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the CarePlan resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/CareTeam:
    get:
      tags:
        - fhir
      description: 'Returns a list of CareTeam resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the CareTeam resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'The status of the CarePlan resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/CareTeam/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single CareTeam resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the CareTeam resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Condition:
    get:
      tags:
        - fhir
      description: 'Returns a list of Condition resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Condition resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Condition/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Condition resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Condition resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Coverage:
    get:
      tags:
        - fhir
      description: 'Returns a list of Coverage resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Coverage resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: payor
          in: query
          description: 'The payor of the Coverage resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Coverage/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Coverage resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Coverage resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Device:
    get:
      tags:
        - fhir
      description: 'Returns a list of Device resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Device resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Device/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Device resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Device resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/DiagnosticReport:
    get:
      tags:
        - fhir
      description: 'Returns a list of DiagnosticReport resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: code
          in: query
          description: 'The code of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the DiagnosticReport resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/DiagnosticReport/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single DiagnosticReport resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the DiagnosticReport resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/DocumentReference:
    get:
      tags:
        - fhir
      description: 'Returns a list of DocumentReference resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          description: 'The type of the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the DocumentReference resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the DocumentReference resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/DocumentReference/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single DocumentReference resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the DocumentReference resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Document/{id}/Binary':
    get:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Encounter:
    get:
      tags:
        - fhir
      description: 'Returns a list of Encounter resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Encounter resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Encounter resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Encounter/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Encounter resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Encounter resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Goal:
    get:
      tags:
        - fhir
      description: 'Returns a list of Condition resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Goal resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Goal/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Goal resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Goal resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Group:
    get:
      tags:
        - fhir
      description: 'Returns a list of Group resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Group resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Group/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Group resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Group resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Group/{id}/$export':
    get:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Immunization:
    get:
      tags:
        - fhir
      description: 'Returns a list of Immunization resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Immunization resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Immunization/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Immunization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Immunization resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Location:
    get:
      tags:
        - fhir
      description: 'Returns a list of Location resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Location resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Location/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Location resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Location resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Medication:
    get:
      tags:
        - fhir
      description: 'Returns a list of Medication resources.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Medication/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Medication resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Medication resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/MedicationRequest:
    get:
      tags:
        - fhir
      description: 'Returns a list of MedicationRequest resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the MedicationRequest resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: intent
          in: query
          description: 'The intent of the MedicationRequest resource.'
          required: false
          schema:
            type: string
        -
          name: status
          in: query
          description: 'The status of the MedicationRequest resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/MedicationRequest/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single MedicationRequest resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the MedicationRequest resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Observation:
    get:
      tags:
        - fhir
      description: 'Returns a list of Observation resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: code
          in: query
          description: 'The code of the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: category
          in: query
          description: 'The category of the Observation resource.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Observation resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Observation/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Observation resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Observation resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Organization:
    get:
      tags:
        - fhir
      description: 'Returns a list of Organization resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The telecom of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Organization resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Organization resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Organization resource.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Organization resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Organization/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Organization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Organization resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modifies a Organization resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the organization.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Organization resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Patient:
    get:
      tags:
        - fhir
      description: 'Returns a list of Patient resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: identifier
          in: query
          description: 'The identifier of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: birthdate
          in: query
          description: 'The birthdate of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: gender
          in: query
          description: 'The gender of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Patient resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Patient resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Patient resource.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Patient resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Patient/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Patient resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Patient resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modifies a Patient resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Patient resource.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Patient resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Patient/$export:
    get:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Person:
    get:
      tags:
        - fhir
      description: 'Returns a list of Person resources.'
      parameters:
        -
          name: name
          in: query
          description: 'The name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: active
          in: query
          description: 'The active status of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Person resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Person resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Person/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Person resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Person resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Practitioner:
    get:
      tags:
        - fhir
      description: 'Returns a list of Practitioner resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: name
          in: query
          description: 'The name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: active
          in: query
          description: 'The active status of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address
          in: query
          description: 'The address of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-city
          in: query
          description: 'The address-city of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-postalcode
          in: query
          description: 'The address-postalcode of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: address-state
          in: query
          description: 'The address-state of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: email
          in: query
          description: 'The email of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: family
          in: query
          description: 'The family name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: given
          in: query
          description: 'The given name of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: phone
          in: query
          description: 'The phone number of the Practitioner resource.'
          required: false
          schema:
            type: string
        -
          name: telecom
          in: query
          description: 'The fax number of the Practitioner resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    post:
      tags:
        - fhir
      description: 'Adds a Practitioner resources.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Practitioner resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Practitioner/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Practitioner resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Practitioner resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    put:
      tags:
        - fhir
      description: 'Modify a Practitioner resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Practitioner resource.'
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: 'The json object for the Practitioner resource.'
              type: object
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/PractitionerRole:
    get:
      tags:
        - fhir
      description: 'Returns a list of PractitionerRole resources.'
      parameters:
        -
          name: specialty
          in: query
          description: 'The specialty of the PractitionerRole resource.'
          required: false
          schema:
            type: string
        -
          name: practitioner
          in: query
          description: 'The practitioner of the PractitionerRole resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/PractitionerRole/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single PractitionerRole resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the PractitionerRole resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Procedure:
    get:
      tags:
        - fhir
      description: 'Returns a list of Procedure resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Procedure resource.'
          required: false
          schema:
            type: string
        -
          name: patient
          in: query
          description: 'The uuid for the patient.'
          required: false
          schema:
            type: string
        -
          name: date
          in: query
          description: 'The datetime of the Procedure resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Procedure/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Procedure resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Procedure resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/fhir/Provenance/{uuid}':
    get:
      tags:
        - fhir
      description: 'Returns a single Provenance resource.'
      parameters:
        -
          name: uuid
          in: path
          description: 'The uuid for the Provenance resource.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/Provenance:
    get:
      tags:
        - fhir
      description: 'Returns a list of Provenance resources.'
      parameters:
        -
          name: _id
          in: query
          description: 'The uuid for the Provenance resource.'
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/metadata:
    get:
      tags:
        - fhir
      description: 'Returns metadata of the fhir server.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
  /fhir/.well-known/smart-configuration:
    get:
      tags:
        - fhir
      description: 'Returns smart configuration of the fhir server.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
  /fhir/$export:
    get:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /fhir/$bulkdata-status:
    get:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
    delete:
      tags:
        - fhir
      description: 'THIS ENDPOINT DOCUMENTATION IS UNDER CONSTRUCTION.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /portal/patient:
    get:
      tags:
        - standard-patient
      description: 'Returns the patient.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  /portal/patient/encounter:
    get:
      tags:
        - standard-patient
      description: 'Returns encounters for the patient.'
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
  '/portal/patient/encounter/{euuid}':
    get:
      tags:
        - standard-patient
      description: 'Returns a selected encounter by its uuid.'
      parameters:
        -
          name: euuid
          in: path
          description: 'The uuid for the encounter.'
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/standard'
        '401':
          $ref: '#/components/responses/unauthorized'
      security:
        -
          openemr_auth: []
components:
  responses:
    standard:
      description: 'Standard response'
      content:
        application/json:
          schema:
            properties:
              validationErrors:
                description: 'Validation errors.'
                type: array
                items:
                  type: object
              internalErrors:
                description: 'Internal errors.'
                type: array
                items:
                  type: object
              data:
                description: 'Returned data.'
                type: array
                items:
                  type: object
            type: object
            example:
              validationErrors: []
              error_description: []
              data: []
    unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            properties:
              error:
                description: 'The error.'
                type: string
              error_description:
                description: 'The description of the error.'
                type: string
              hint:
                description: 'More specific information on the error.'
                type: string
              message:
                description: 'Message regarding the error.'
                type: string
            type: object
            example:
              error: access_denied
              error_description: 'The resource owner or authorization server denied the request.'
              hint: 'Missing ''Authorization'' header'
              message: 'The resource owner or authorization server denied the request.'
  securitySchemes:
    openemr_auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth2/default/authorize
          tokenUrl: /oauth2/default/token
          scopes:
            openid: 'Generic mandatory scope'
            offline_access: 'Will signal server to provide a refresh token'
            'api:fhir': 'FHIR R4 API'
            patient/AllergyIntolerance.read: 'Read allergy intolerance resources for the current patient (api:fhir)'
            patient/CarePlan.read: 'Read care plan resources for the current patient (api:fhir)'
            patient/CareTeam.read: 'Read care team resources for the current patient (api:fhir)'
            patient/Condition.read: 'Read condition resources for the current patient (api:fhir)'
            patient/Device.read: 'Read device resources for the current patient (api:fhir)'
            patient/DiagnosticReport.read: 'Read diagnostic report resources for the current patient (api:fhir)'
            patient/DocumentReference.read: 'Read document reference resources for the current patient (api:fhir)'
            patient/Encounter.read: 'Read encounter resources for the current patient (api:fhir)'
            patient/Goal.read: 'Read goal resources for the current patient (api:fhir)'
            patient/Immunization.read: 'Read immunization resources for the current patient (api:fhir)'
            patient/Location.read: 'Read location resources for the current patient (api:fhir)'
            patient/Medication.read: 'Read medication resources for the current patient (api:fhir)'
            patient/MedicationRequest.read: 'Read medication request resources for the current patient (api:fhir)'
            patient/Observation.read: 'Read observation resources for the current patient (api:fhir)'
            patient/Organization.read: 'Read organization resources for the current patient (api:fhir)'
            patient/Patient.read: 'Read patient resource for the current patient (api:fhir)'
            patient/Person.read: 'Read person resources for the current patient (api:fhir)'
            patient/Practitioner.read: 'Read practitioner resources for the current patient (api:fhir)'
            patient/Procedure.read: 'Read procedure resources for the current patient (api:fhir)'
            patient/Provenance.read: 'Read provenance resources for the current patient (api:fhir)'
            system/AllergyIntolerance.read: 'Read all allergy intolerance resources in the system (api:fhir)'
            system/CarePlan.read: 'Read all care plan resources in the system (api:fhir)'
            system/CareTeam.read: 'Read all care team resources in the system (api:fhir)'
            system/Condition.read: 'Read all condition resources in the system (api:fhir)'
            system/Coverage.read: 'Read all coverage resources in the system (api:fhir)'
            system/Device.read: 'Read all device resources in the system (api:fhir)'
            system/DiagnosticReport.read: 'Read all diagnostic report resources in the system (api:fhir)'
            system/Document.read: 'Read all document resources in the system (api:fhir)'
            system/DocumentReference.read: 'Read all document reference resources in the system (api:fhir)'
            system/Encounter.read: 'Read all encounter resources in the system (api:fhir)'
            system/Goal.read: 'Read all goal resources in the system (api:fhir)'
            system/Group.read: 'Read all group resources in the system (api:fhir)'
            system/Immunization.read: 'Read all immunization resources in the system (api:fhir)'
            system/Location.read: 'Read all location resources in the system (api:fhir)'
            system/Medication.read: 'Read all medication resources in the system (api:fhir)'
            system/MedicationRequest.read: 'Read all medication request resources in the system (api:fhir)'
            system/Observation.read: 'Read all observation resources in the system (api:fhir)'
            system/Organization.read: 'Read all organization resources in the system (api:fhir)'
            system/Patient.read: 'Read all patient resources in the system (api:fhir)'
            system/Person.read: 'Read all person resources in the system (api:fhir)'
            system/Practitioner.read: 'Read all practitioner resources in the system (api:fhir)'
            system/PractitionerRole.read: 'Read all practitioner role resources in the system (api:fhir)'
            system/Procedure.read: 'Read all procedure resources in the system (api:fhir)'
            system/Provenance.read: 'Read all provenance resources in the system (api:fhir)'
            user/AllergyIntolerance.read: 'Read all allergy intolerance resources the user has access to (api:fhir)'
            user/CarePlan.read: 'Read all care plan resources the user has access to (api:fhir)'
            user/CareTeam.read: 'Read all care team resources the user has access to (api:fhir)'
            user/Condition.read: 'Read all condition resources the user has access to (api:fhir)'
            user/Coverage.read: 'Read all coverage resources the user has access to (api:fhir)'
            user/Device.read: 'Read all device resources the user has access to (api:fhir)'
            user/DiagnosticReport.read: 'Read all diagnostic report resources the user has access to (api:fhir)'
            user/DocumentReference.read: 'Read all document reference resources the user has access to (api:fhir)'
            user/Encounter.read: 'Read all encounter resources the user has access to (api:fhir)'
            user/Goal.read: 'Read all goal resources the user has access to (api:fhir)'
            user/Immunization.read: 'Read all immunization resources the user has access to (api:fhir)'
            user/Location.read: 'Read all location resources the user has access to (api:fhir)'
            user/Medication.read: 'Read all medication resources the user has access to (api:fhir)'
            user/MedicationRequest.read: 'Read all medication request resources the user has access to (api:fhir)'
            user/Observation.read: 'Read all observation resources the user has access to (api:fhir)'
            user/Organization.read: 'Read all organization resources the user has access to (api:fhir)'
            user/Organization.write: 'Write all organization resources the user has access to (api:fhir)'
            user/Patient.read: 'Read all patient resources the user has access to (api:fhir)'
            user/Patient.write: 'Write all patient resources the user has access to (api:fhir)'
            user/Person.read: 'Read all person resources the user has access to (api:fhir)'
            user/Practitioner.read: 'Read all practitioner resources the user has access to (api:fhir)'
            user/Practitioner.write: 'Write all practitioner resources the user has access to (api:fhir)'
            user/PractitionerRole.read: 'Read all practitioner role resources the user has access to (api:fhir)'
            user/Procedure.read: 'Read all procedure resources the user has access to (api:fhir)'
            user/Provenance.read: 'Read all provenance resources the user has access to (api:fhir)'
            'api:oemr': 'Standard OpenEMR API'
            user/allergy.read: 'Read allergies the user has access to (api:oemr)'
            user/allergy.write: 'Write allergies the user has access to for (api:oemr)'
            user/appointment.read: 'Read appointments the user has access to (api:oemr)'
            user/appointment.write: 'Write appointments the user has access to for (api:oemr)'
            user/dental_issue.read: 'Read dental issues the user has access to (api:oemr)'
            user/dental_issue.write: 'Write dental issues the user has access to (api:oemr)'
            user/document.read: 'Read documents the user has access to (api:oemr)'
            user/document.write: 'Write documents the user has access to (api:oemr)'
            user/drug.read: 'Read drugs the user has access to (api:oemr)'
            user/encounter.read: 'Read encounters the user has access to (api:oemr)'
            user/encounter.write: 'Write encounters the user has access to (api:oemr)'
            user/facility.read: 'Read facilities the user has access to (api:oemr)'
            user/facility.write: 'Write facilities the user has access to (api:oemr)'
            user/immunization.read: 'Read immunizations the user has access to (api:oemr)'
            user/insurance.read: 'Read insurances the user has access to (api:oemr)'
            user/insurance.write: 'Write insurances the user has access to (api:oemr)'
            user/insurance_company.read: 'Read insurance companies the user has access to (api:oemr)'
            user/insurance_company.write: 'Write insurance companies the user has access to (api:oemr)'
            user/insurance_type.read: 'Read insurance types the user has access to (api:oemr)'
            user/list.read: 'Read lists the user has access to (api:oemr)'
            user/medical_problem.read: 'Read medical problems the user has access to (api:oemr)'
            user/medical_problem.write: 'Write medical problems the user has access to (api:oemr)'
            user/medication.read: 'Read medications the user has access to (api:oemr)'
            user/medication.write: 'Write medications the user has access to (api:oemr)'
            user/message.write: 'Read messages the user has access to (api:oemr)'
            user/patient.read: 'Read patients the user has access to (api:oemr)'
            user/patient.write: 'Write patients the user has access to (api:oemr)'
            user/practitioner.read: 'Read practitioners the user has access to (api:oemr)'
            user/practitioner.write: 'Write practitioners the user has access to (api:oemr)'
            user/prescription.read: 'Read prescriptions the user has access to (api:oemr)'
            user/procedure.read: 'Read procedures the user has access to (api:oemr)'
            user/soap_note.read: 'Read soap notes the user has access to (api:oemr)'
            user/soap_note.write: 'Write soap notes the user has access to (api:oemr)'
            user/surgery.read: 'Read surgeries the user has access to (api:oemr)'
            user/surgery.write: 'Write surgeries the user has access to (api:oemr)'
            user/vital.read: 'Read vitals the user has access to (api:oemr)'
            user/vital.write: 'Write vitals the user has access to (api:oemr)'
            'api:port': 'Standard Patient Portal OpenEMR API'
            patient/encounter.read: 'Read encounters the patient has access to (api:port)'
            patient/patient.read: 'Write encounters the patient has access to (api:port)'
tags:
  -
    name: fhir
    description: 'FHIR R4 API'
  -
    name: standard
    description: 'Standard OpenEMR API'
  -
    name: standard-patient
    description: 'Standard Patient Portal OpenEMR API'
