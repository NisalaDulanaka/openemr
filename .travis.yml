services:
  - mysql
language: php
.steps:
  - &lint_style |
      echo "------------------------"
      echo "Checking for PHP styling (PSR2) issues"
      composer global require "squizlabs/php_codesniffer=3.*"
      $HOME/.config/composer/vendor/bin/phpcs -p -n --extensions=php,inc --report-width=120 --standard=ci/phpcs.xml --report=full .
  - &lint_syntax |
      echo "------------------------"
      echo "Checking for PHP syntax errors"
      failSyntax=false;
      if find . -type f -name "*.php" -exec php -d error_reporting=32767 -l {} \; 2>&1 >&- | grep "^"; then failSyntax=true; fi;
      if find . -type f -name "*.inc" -exec php -d error_reporting=32767 -l {} \; 2>&1 >&- | grep "^"; then failSyntax=true; fi;
      if $failSyntax; then
          exit 1;
      fi
  - &build_test |
      echo "------------------------"
      echo "Checking build and tests"
      echo "------------------------"
      echo "Build openemr (mimick standard build steps for production package)"
      composer install
      npm install
      npm run build
      composer global require phing/phing
      $HOME/.config/composer/vendor/bin/phing vendor-clean
      $HOME/.config/composer/vendor/bin/phing assets-clean
      composer global remove phing/phing
      composer dump-autoload -o
      rm -fr node_modules
      echo "------------------------"
      echo "Also build ccdaservice to allow ccdaservice testing (this step is not part of production build)"
      cd ccdaservice
      npm install
      cd ../
      echo "------------------------"
      echo "Install/configure active openemr instance"
      chmod 666 sites/default/sqlconf.php
      sudo chown -R www-data:www-data sites/default/documents
      sed -e 's@^exit;@ @' < contrib/util/installScripts/InstallerAuto.php > contrib/util/installScripts/InstallerAutoTemp.php
      php -f contrib/util/installScripts/InstallerAutoTemp.php
      rm -f contrib/util/installScripts/InstallerAutoTemp.php
      echo "------------------------"
      echo "Turn on the api to allow api testing"
      mysql -u openemr --password="openemr" -h localhost -e "UPDATE globals SET gl_value = 1 WHERE gl_name = 'rest_api'" openemr
      echo "------------------------"
      echo "Prepare for testing"
      composer require --dev "phpunit/phpunit=8.*"
      composer require --dev "symfony/panther=^0.6"
      composer dump-autoload -o
      echo "------------------------"
      echo "Run all tests (testsuite openemr: unit, functional, api)"
      php vendor/bin/phpunit --testsuite openemr --testdox
      echo "------------------------"
      echo "Run only unit tests"
      php vendor/bin/phpunit --testsuite unit --testdox
      echo "------------------------"
      echo "Run only functional tests"
      php vendor/bin/phpunit --testsuite functional --testdox
      echo "------------------------"
      echo "Run only api tests"
      php vendor/bin/phpunit --testsuite api --testdox
before_install:
  - echo "extension=ldap.so" >>php --ini | grep "Loaded Configuration" | sed -e "s|.:\s||"``
before_script:
  - echo 'error_reporting = "E_ALL & ~E_NOTICE & ~E_STRICT"' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
jobs:
  include:
    - env: CI_JOB=lint_style
      php: '7.4'
      script: *lint_style
    - env: CI_JOB=lint_syntax
      php: '7.2'
      script: *lint_syntax
    - env: CI_JOB=lint_syntax
      php: '7.3'
      script: *lint_syntax
    - env: CI_JOB=lint_syntax
      php: '7.4'
      script: *lint_syntax
    - env: CI_JOB=build_test
      php: '7.2'
      script: *build_test
    - env: CI_JOB=build_test
      php: '7.3'
      script: *build_test
    - env: CI_JOB=build_test
      php: '7.4'
      script: *build_test
